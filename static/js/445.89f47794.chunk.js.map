{"version":3,"file":"static/js/445.89f47794.chunk.js","mappings":"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","sources":["components/ErrorMessage/ErrorMessage.jsx","components/DetailsMovie/DetailsMovieBase.jsx","components/CastMovie/CastMovieItem.jsx","components/CastMovie/CastMovieList.jsx","pages/Cast.jsx","components/ReviewsMovie/ReviewsMovieList.jsx","pages/Reviews.jsx","pages/MovieDetails.jsx","services/api.js","utils/constans.js"],"sourcesContent":["import React from 'react';\n\nexport const ErrorMessage = () => {\n  return <div>Ups... I could not find information for this request.ðŸ˜¢</div>;\n};\n","import React from 'react';\nimport { StyledDetailsDiv } from 'styled';\n\nexport const DetailsMovieBase = ({ detailsMovie }) => {\n  const {\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n    poster_path,\n  } = detailsMovie;\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  return (\n    <StyledDetailsDiv>\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/original${poster_path}`\n            : defaultImg\n        }\n        width={250}\n        alt={original_title}\n      />\n      <div>\n        <h2>\n          {original_title}({parseInt(release_date.split('-')[0], 10)})\n        </h2>\n\n        <p>User Score: {vote_average.toFixed(1)}</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres.map(({ name }) => name).join(', ')}</p>\n      </div>\n    </StyledDetailsDiv>\n  );\n};\n","import React from 'react';\nimport { StyledCastLi } from 'styled';\n\nexport const CastMovieItem = ({ name, photo }) => {\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  return (\n    <StyledCastLi>\n      <img\n        src={photo ? `https://image.tmdb.org/t/p/original${photo}` : defaultImg}\n        width={150}\n        alt=\"\"\n      />\n      <p>{name}</p>\n    </StyledCastLi>\n  );\n};\n","import React from 'react';\nimport { CastMovieItem } from './CastMovieItem';\nimport { StyledUl } from 'styled';\n\nexport const CastMovieList = ({ castMovie }) => {\n  return (\n    <StyledUl>\n      {castMovie.map(({ original_name, profile_path, id }) => (\n        <CastMovieItem key={id} name={original_name} photo={profile_path} />\n      ))}\n    </StyledUl>\n  );\n};\n","import { CastMovieList } from 'components/CastMovie/CastMovieList';\nimport { ErrorMessage } from 'components/ErrorMessage/ErrorMessage';\nimport { Loader } from 'components/Loader/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { requestCastMovie } from 'services/api';\nimport { STATUSES } from 'utils/constans';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castMovie, setCastMovie] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(STATUSES.idle);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const handlepopularMovies = async () => {\n      try {\n        setStatus(STATUSES.pending);\n        const { cast } = await requestCastMovie(movieId);\n        setCastMovie(cast);\n        setStatus(STATUSES.success);\n      } catch (error) {\n        setError(error.message);\n        setStatus(STATUSES.error);\n      }\n    };\n    handlepopularMovies();\n  }, [setError, movieId]);\n\n  return (\n    <div>\n      {status === STATUSES.pending && <Loader />}\n      {status === STATUSES.error && <ErrorMessage error={error} />}\n      {status === STATUSES.success && <CastMovieList castMovie={castMovie} />}\n    </div>\n  );\n};\n\nexport default Cast;\n","import React from 'react';\n\nexport const ReviewsMovieList = ({ reviewsMovie }) => {\n  return (\n    <ul>\n      {reviewsMovie.map(({ id, author, content }) => (\n        <li key={id}>\n          <h3>Author: {author}</h3>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { ErrorMessage } from 'components/ErrorMessage/ErrorMessage';\nimport { Loader } from 'components/Loader/Loader';\nimport { ReviewsMovieList } from 'components/ReviewsMovie/ReviewsMovieList';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { requestReviewsMovie } from 'services/api';\nimport { STATUSES } from 'utils/constans';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewsMovie, setReviewsMovie] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(STATUSES.idle);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const getReviewsMovie = async () => {\n      try {\n        setStatus(STATUSES.pending);\n        const { results } = await requestReviewsMovie(movieId);\n        setReviewsMovie(results);\n        setStatus(STATUSES.success);\n      } catch (error) {\n        setError(error.message);\n        setStatus(STATUSES.error);\n      }\n    };\n    getReviewsMovie();\n  }, [setError, movieId]);\n\n  return (\n    <div>\n      {status === STATUSES.pending && <Loader />}\n      {status === STATUSES.error && <ErrorMessage error={error} />}\n      {status === STATUSES.success && (\n        <>\n          {reviewsMovie.length > 0 ? (\n            <ReviewsMovieList reviewsMovie={reviewsMovie} />\n          ) : (\n            <p>We don`t have any reviews for this movie</p>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import { DetailsMovieBase } from 'components/DetailsMovie/DetailsMovieBase';\nimport { ErrorMessage } from 'components/ErrorMessage/ErrorMessage';\nimport { Loader } from 'components/Loader/Loader';\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Link, Route, Routes, useLocation, useParams } from 'react-router-dom';\n\nimport { requestDetailsMovie } from 'services/api';\nimport { STATUSES } from 'utils/constans';\n\nimport Cast from './Cast';\nimport Reviews from './Reviews';\n\nimport { StyledDetailsDiv, StyledLinkDetails } from 'styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const bacrLifRef = useRef(location.state?.from ?? '/');\n  const [detailsMovie, setDetailsMovie] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(STATUSES.idle);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const handlepopularMovies = async () => {\n      try {\n        setStatus(STATUSES.pending);\n        const movieData = await requestDetailsMovie(movieId);\n        setDetailsMovie(movieData);\n        setStatus(STATUSES.success);\n      } catch (error) {\n        setError(error.message);\n        setStatus(STATUSES.error);\n      }\n    };\n    handlepopularMovies();\n  }, [setError, movieId]);\n\n  return (\n    <div>\n      <Link to={bacrLifRef.current}>Go back</Link>\n      {status === STATUSES.pending && <Loader />}\n      {status === STATUSES.error && <ErrorMessage error={error} />}\n      {status === STATUSES.success && (\n        <DetailsMovieBase detailsMovie={detailsMovie} />\n      )}\n      {status !== STATUSES.error && (\n        <>\n          <h3>Adiditional information</h3>\n          <StyledDetailsDiv>\n            <StyledLinkDetails to=\"cast\">Cast</StyledLinkDetails>\n            <StyledLinkDetails to=\"reviews\">Reviews</StyledLinkDetails>\n          </StyledDetailsDiv>\n          <Routes>\n            <Route path=\"cast\" element={<Cast />} />\n            <Route path=\"reviews\" element={<Reviews />} />\n          </Routes>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org`;\naxios.defaults.params = {\n  api_key: `1ea9a27653d3c7257140465327102387`,\n  language: 'en-US',\n};\n\nexport const requestPopularMovies = async () => {\n  const { data } = await axios.get(`/3/trending/all/day`);\n  return data;\n};\n\nexport const requestDetailsMovie = async movieId => {\n  const { data } = await axios.get(`/3/movie/${movieId}`);\n  return data;\n};\n\nexport const requestCastMovie = async movieId => {\n  const { data } = await axios.get(`/3/movie/${movieId}/credits`);\n  return data;\n};\n\nexport const requestReviewsMovie = async movieId => {\n  const { data } = await axios.get(`/3/movie/${movieId}/reviews`);\n  return data;\n};\n\nexport const requestMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `3/search/movie?query=${query}&include_adult=false`\n  );\n  return data;\n};\n","export const STATUSES = {\n  idle: 'idle',\n  pending: 'pending',\n  success: 'success',\n  error: 'error',\n};\n"],"names":["ErrorMessage","_jsx","children","DetailsMovieBase","_ref","detailsMovie","original_title","release_date","vote_average","overview","genres","poster_path","_jsxs","StyledDetailsDiv","src","concat","width","alt","parseInt","split","toFixed","map","_ref2","name","join","CastMovieItem","photo","StyledCastLi","CastMovieList","castMovie","StyledUl","original_name","profile_path","id","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setCastMovie","_useState3","_useState4","error","setError","_useState5","STATUSES","_useState6","status","setStatus","useEffect","handlepopularMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$requestCastMov","cast","_context","prev","next","requestCastMovie","sent","t0","message","stop","apply","arguments","Loader","ReviewsMovieList","reviewsMovie","author","content","setReviewsMovie","getReviewsMovie","_yield$requestReviews","results","requestReviewsMovie","_Fragment","length","_location$state$from","_location$state","location","useLocation","bacrLifRef","useRef","state","from","setDetailsMovie","movieData","requestDetailsMovie","Link","to","current","StyledLinkDetails","Routes","Route","path","element","Cast","Reviews","axios","api_key","language","requestPopularMovies","_yield$axios$get","data","abrupt","_callee2","_yield$axios$get2","_context2","_x","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","_x3","requestMoviesByQuery","_ref5","_callee5","query","_yield$axios$get5","_context5","_x4","idle","pending","success"],"sourceRoot":""}